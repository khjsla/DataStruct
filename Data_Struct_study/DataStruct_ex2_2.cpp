//#include <iostream>
//using namespace std;
//
///* 포인터에 대한 예시.
//   포인터는 주소값과 + 자료형을 저장합니다. -> 따라서 포인터 사용시, 형식도 신경써야합니다.
//   포인터의 크기는 항상 [ 4 BYTE ] 입니다.
//   포인터를 한번에 많이 선언하는 것은 안됩니다. 일반변수와 동시에 선언하는 것도 안됩니다. 
//   임의의 주소값(0xFF7C등,,)을 대입하는 것도 안됩니다.
//   *를 뗀 이름 자체만은 그 포인터가 가리키는 주소값을 나타냅니다
//   *가 붙어있는 포인터는 그 포인터가 가리키는 주소칸 안에 있는 데이터를 나타냅니다
//*/
//
//int main() {
//	char c = 'A';
//	short s = 1;
//	int i = 10;
//	float f = 3.14f;
//	double d = 3.141592;
//
//	char *ptrc = &c; //포인터에는 그에 맞는 형식을 가진 데이터의 주소값이 대입되게 됩니다.
//	short *ptrs = &s;
//	int *ptri = &i;
//	float *ptrf = &f;
//	double *ptrd = &d;
//
//	*ptrc = *ptrc + 1; // (*prtc)++ 와 같은의미, c++과 같은의미. = B 가됩니다. 
//	//*ptr은 주소가 아닌, 그 주소값안의 [ 데이터 ] 를 의미하기 때문입니다.
//	(*ptrs)++; //*ptrs = *ptrs + 1 와 같은의미, s++과 같은의미. = 2 가됩니다.
//	(*ptri)++; //*ptri = *ptri + 1 와 같은의미, i++과 같은의미. = 11 이 됩니다.
//	*ptrf = 5.0f; //f의 값은? //f = 5.0f와 같은의미, 이제 f는 3.14가 아닌 5.0이 되게됩니다. 
//	*ptrd = f * f; //*ptrd와 d는 같은 것입니다. 이제 d의 값은 25가 되게 됩니다.
//
//	cout << "c=" << c << ", s=" << s << ", i=" << i << ", f=" << f << ", d=" << d << endl;
//	cout << "*ptrc=" << *ptrc << ", *ptrs=" << *ptrs << ", *ptri=" << *ptri << ", *ptrf=" 
//		<< *ptrf << ", *ptrd=" << *ptrd << endl;
//
//	return 0;
//}